{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\"; // ステート初期値\n\nconst initial = {\n  message: \"START\",\n  count: 0\n}; // レデューサー\n\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        message: \"INCREMENT\",\n        count: state.count + 1\n      };\n\n    case \"DECREMENT\":\n      return {\n        message: \"DECREMENT\",\n        count: state.count - 1\n      };\n\n    case \"RESET\":\n      return {\n        message: \"RESET\",\n        count: initial.count\n      };\n\n    default:\n      return state;\n  }\n} // initStore関数（redux-store.jsで必要）\n// ミドルウェアを使うと言う記述をしている\n\n\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/yuki/Desktop/programming/JavaScript/React/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","count","counterReducer","state","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,OADK;AAEdC,EAAAA,KAAK,EAAE;AAFO,CAAhB,C,CAKA;;AACA,SAASC,cAAT,CAAwBC,KAAK,GAAGJ,OAAhC,EAAyCK,MAAzC,EAAiD;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AACLL,QAAAA,OAAO,EAAE,WADJ;AAELC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFhB,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO;AACLD,QAAAA,OAAO,EAAE,WADJ;AAELC,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFhB,OAAP;;AAIF,SAAK,OAAL;AACE,aAAO;AACLD,QAAAA,OAAO,EAAE,OADJ;AAELC,QAAAA,KAAK,EAAEF,OAAO,CAACE;AAFV,OAAP;;AAIF;AACE,aAAOE,KAAP;AAjBJ;AAmBD,C,CAED;AACA;;;AACA,OAAO,SAASG,SAAT,CAAmBH,KAAK,GAAGJ,OAA3B,EAAoC;AACzC,SAAOH,WAAW,CAACM,cAAD,EAAiBC,KAAjB,EAAwBN,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACD","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\n// ステート初期値\nconst initial = {\n  message: \"START\",\n  count: 0,\n};\n\n// レデューサー\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        message: \"INCREMENT\",\n        count: state.count + 1,\n      };\n    case \"DECREMENT\":\n      return {\n        message: \"DECREMENT\",\n        count: state.count - 1,\n      };\n    case \"RESET\":\n      return {\n        message: \"RESET\",\n        count: initial.count,\n      };\n    default:\n      return state;\n  }\n}\n\n// initStore関数（redux-store.jsで必要）\n// ミドルウェアを使うと言う記述をしている\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}\n"]},"metadata":{},"sourceType":"module"}