{"ast":null,"code":"var _jsxFileName = \"/Users/yuki/Desktop/programming/JavaScript/React/next_app/components/Counter.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 15px\"\n    });\n\n    this.doAction = this.doAction.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  doAction(e) {\n    if (e.shiftKey) {\n      return this.props.dispatch({\n        type: \"DECREMENT\"\n      });\n    } else {\n      return this.props.dispatch({\n        type: \"INCREMENT\"\n      });\n    }\n  }\n\n  reset() {\n    return this.props.dispatch({\n      type: \"RESET\"\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, this.props.message, \": \", this.props.count), __jsx(\"button\", {\n      style: this.style,\n      onClick: this.doAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Count\"), __jsx(\"button\", {\n      style: this.style,\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Reset\"));\n  }\n\n}\n\nCounter = connect(state => state)(Counter);\nexport default Counter;","map":{"version":3,"sources":["/Users/yuki/Desktop/programming/JavaScript/React/next_app/components/Counter.js"],"names":["React","Component","connect","Counter","constructor","props","fontSize","padding","doAction","bind","reset","e","shiftKey","dispatch","type","render","message","count","style","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAM9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,mCALX;AACNC,MAAAA,QAAQ,EAAE,MADJ;AAENC,MAAAA,OAAO,EAAE;AAFH,KAKW;;AAEjB,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDD,EAAAA,QAAQ,CAACG,CAAD,EAAI;AACV,QAAIA,CAAC,CAACC,QAAN,EAAgB;AACd,aAAO,KAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAKT,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB,CAAP;AACD;AACF;;AAEDJ,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKL,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAApB,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWW,OADd,QACyB,KAAKX,KAAL,CAAWY,KADpC,CADF,EAIE;AAAQ,MAAA,KAAK,EAAE,KAAKC,KAApB;AAA2B,MAAA,OAAO,EAAE,KAAKV,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAOE;AAAQ,MAAA,KAAK,EAAE,KAAKU,KAApB;AAA2B,MAAA,OAAO,EAAE,KAAKR,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CADF;AAaD;;AAtC6B;;AAyChCP,OAAO,GAAGD,OAAO,CAAEiB,KAAD,IAAWA,KAAZ,CAAP,CAA0BhB,OAA1B,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Counter extends Component {\n  style = {\n    fontSize: \"12pt\",\n    padding: \"5px 15px\",\n  };\n\n  constructor(props) {\n    super(props);\n    this.doAction = this.doAction.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  doAction(e) {\n    if (e.shiftKey) {\n      return this.props.dispatch({ type: \"DECREMENT\" });\n    } else {\n      return this.props.dispatch({ type: \"INCREMENT\" });\n    }\n  }\n\n  reset() {\n    return this.props.dispatch({ type: \"RESET\" });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          {this.props.message}: {this.props.count}\n        </p>\n        <button style={this.style} onClick={this.doAction}>\n          Count\n        </button>\n        <button style={this.style} onClick={this.reset}>\n          Reset\n        </button>\n      </div>\n    );\n  }\n}\n\nCounter = connect((state) => state)(Counter);\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}